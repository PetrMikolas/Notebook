@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.Extensions.Caching.Memory
@using Notebook.Components.Account
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Notebook.Models

@inject SignInManager<AppUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Přihlášení</PageTitle>

<div class="mt-3 m-5" style="max-width:570px; user-select:none;">
    <h1>Přihlášení</h1>
    <section>
        <StatusMessage Message="@errorMessage" />
        <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
            <DataAnnotationsValidator />
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label for="email" class="form-label">E-mail</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                <label for="password" class="form-label">Heslo</label>
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>
            <div class="checkbox mb-2">
                <label class="form-label">
                    <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />
                    na tomto počítači neodhlašovat
                </label>
            </div>
            <div>
                <button type="submit" class="w-100 btn btn-lg btn-success">Přihlásit</button>
            </div>
            <div>
                <br />
                <p>
                    <a href="Account/ForgotPassword">Zapomenuté heslo</a>
                </p>
                <p>
                    <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Registrace nového uživatele</a>
                </p>
                <p>
                    <a href="Account/ResendEmailConfirmation">Znovu odeslat ověřovací e-mail</a>
                </p>
            </div>
        </EditForm>
    </section>
</div>

@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        // This doesn't count login failures towards account lockout
        // To enable password failures to trigger account lockout, set lockoutOnFailure: true
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);

        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            RedirectManager.RedirectTo("/");
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo("Account/LoginWith2fa", new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            RedirectManager.RedirectTo("Account/Lockout");
        }
        else
        {
            errorMessage = "Error: Neplatné přihlašovací údaje.";
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Povinný údaj")]
        [EmailAddress(ErrorMessage = "Zadaný e-mail není platná e-mailová adresa")]
        public string Email { get; set; } = "demo.zapisnik@gmail.com";

        [Required(ErrorMessage = "Povinný údaj")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "Notebook@1";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}